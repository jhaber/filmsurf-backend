var TMDb = require('tmdbv3').init(process.env.TMDB_API_KEY);
var Q = require('q');
require('date-utils');

console.log('Using TMDb API Key: ' + process.env.TMDB_API_KEY);

exports.retrieve = function (id) {
    var deferred = Q.defer();

    TMDb.movie.info(id, function(err, body) {
        if (!err && body) {
            deferred.resolve([ body, expiration(body), imdbId(body) ]);
        } else {
            if (err && err.status_code === 6) {
                deferred.reject(404);
            } else if (err) {
                console.log('TMDb error retrieving movie \'' + id + '\', ' + JSON.stringify(err));
                deferred.reject(err);
            } else {
                console.log('TMDb error retrieving movie \'' + id + '\'');
                deferred.reject();
            }
        }
    });

    return deferred.promise;
};

exports.search = function (query, page) {
    var deferred = Q.defer();

    TMDb.search.movie(query, page + 1, function(err, body) {
        if (!err && body) {
            deferred.resolve([ body, 604800 ]);
        } else {
            if (err) {
                console.log('TMDb error searching for \'' + query + '\', ' + JSON.stringify(err));
                deferred.reject(err);
            } else {
                console.log('TMDb error searching for \'' + query + '\'');
                deferred.reject();
            }
        }
    });

    return deferred.promise;
};

function expiration(movie) {
    var release = new Date().addYears(-7);

    if (movie.release_date) {
        release = dateFromString(movie.release_date);
    }

    var movieAge = release.getDaysBetween(new Date());
    if (movieAge < 1) movieAge = 1;

    var daysToCache = Math.ceil(movieAge / 365);

    return daysToCache * 86400;
}

function imdbId(movie) {
    if (movie.imdb_id) {
        return movie.imdb_id.indexOf('tt') == 0 ? movie.imdb_id : 'tt' + movie.imdb_id;
    } else {
        return undefined;
    }
}

function dateFromString(dateString) {
    var parts = dateString.split("-");
    return new Date(parseInt(parts[0]), parseInt(parts[1]) - 1, parseInt(parts[2]));
}

