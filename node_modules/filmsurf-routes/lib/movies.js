var Q = require('q');
var RottenTomatoes = require('./rottentomatoes');
var IMDb = require('./imdb');
var Cache = require('./cache');

exports.retrieve = function(id) {
    var cacheKey = ['movies', id];

    return Cache.retrieve(cacheKey).fail(function() {
        return RottenTomatoes.retrieve(id).spread(function(data, expiration, imdbId) {
            var response = { rotten_tomatoes: data };

            return Q.fcall(function() {
                if (imdbId) {
                    return 'tt' + imdbId;
                } else {
                    return Q.reject();
                }
            }).then(IMDb.retrieve).then(function(imdbData) {
                    response.imdb = imdbData;
                }).fail(function() {}).then(function() {
                    Cache.save(cacheKey, response, expiration);
                    return [ response, expiration ];
                });
        }).fail(function(err) {
                if (err === 404) {
                    return Q.reject(404);
                } else {
                    return Q.reject(500);
                }
            });
    });
};

exports.search = function(params) {
    var query = params.q;
    var page = params.page ? parseInt(params.page) : 0;

    if (!query) {
        return Q.reject(400);
    }

    var cacheKey = ['search', query, page];

    return Cache.retrieve(cacheKey).fail(function() {
        return RottenTomatoes.search(query, page).spread(function(data, expiration) {
            Cache.save(cacheKey, data, expiration);
            return [ data, expiration ];
        }).fail(function() {
            return Q.reject(500);
        });
    });
};