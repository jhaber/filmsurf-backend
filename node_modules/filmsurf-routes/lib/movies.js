var Q = require('q');
var TMDb = require('./tmdb');
var RottenTomatoes = require('./rottentomatoes');
var IMDb = require('./imdb');
var Ebert = require('./ebert');
var Cache = require('./cache');

exports.retrieve = function(id) {
    var cacheKey = ['movies', id];

    return Cache.retrieve(cacheKey).fail(function() {
        return TMDb.retrieve(id).spread(function(data, expiration, imdbId) {
            var response = { tmdb: data};

            var rtPromise, imdbPromise;
            if (imdbId) {
                rtPromise = RottenTomatoes.retrieveByImdb(imdbId).then(function(rtData) {
                    response.rotten_tomatoes = rtData;
                    return rtData.id;
                }).then(Ebert.retrieveByRottenTomatoesId).then(function(ebertData) {
                    response.ebert = ebertData;
                }).fail(function() { });
                imdbPromise = IMDb.retrieve(imdbId).then(function(imdbData) {
                   response.imdb = imdbData;
                }).fail(function() { });
            } else {
                rtPromise = Q.resolve();
                imdbPromise = Q.resolve();
            }

            return Q.allResolved([ rtPromise, imdbPromise ]).then(function() {
                Cache.save(cacheKey, response, expiration);
                return [ response, expiration ];
            });
        }).fail(function(err) {
            if (err === 404) {
                return Q.reject(404);
            } else {
                return Q.reject(500);
            }
        });
    });
};

exports.search = function(params) {
    var query = params.q;
    var page = params.page ? parseInt(params.page) : 0;

    if (!query) {
        return Q.reject(400);
    }

    var cacheKey = ['search', query, page];

    return Cache.retrieve(cacheKey).fail(function() {
        return TMDb.search(query, page).spread(function(data, expiration) {
            Cache.save(cacheKey, data, expiration);
            return [ data, expiration ];
        }).fail(function() {
            return Q.reject(500);
        });
    });
};