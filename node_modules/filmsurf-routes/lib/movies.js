var Q = require('q');
var RottenTomatoes = require('./rottentomatoes');
var IMDb = require('./imdb');
var Cache = require('./cache');

exports.retrieve = function(id, callback) {
    var cacheKey = ['movies', id];

    Cache.retrieve(cacheKey).spread(function(data, expiration) {
        callback(data, expiration);
    }).fail(function() {
        RottenTomatoes.retrieve(id).spread(function(data, expiration, imdbId) {
            var response = { rotten_tomatoes: data };

            Q.fcall(function() {
                if (imdbId) {
                    return 'tt' + imdbId;
                } else {
                    throw new Error();
                }
            }).then(IMDb.retrieve).then(function(imdbData) {
                response.imdb = imdbData;
            }).fin(function() {
                callback(response, expiration);
                Cache.save(cacheKey, response, expiration);
            });
        }).fail(function(err) {
            if (err === 404) {
                callback({ error: true, code: 404 }, 604800);
            } else {
                callback({ error: true, code: 500 });
            }
        });
    });
};

exports.search = function(params, callback) {
    var query = params.q;
    var page = params.page ? parseInt(params.page) : 0;

    if (!query) {
        callback(undefined);
        return;
    }

    var cacheKey = ['search', query, page];

    Cache.retrieve(cacheKey).spread(function(data, expiration) {
        callback(data, expiration);
    }).fail(function() {
        RottenTomatoes.search(query, page).spread(function(data, expiration) {
            callback(data, expiration);
            Cache.save(cacheKey, data, expiration);
        }).fail(function() {
            callback({ error: true, code: 500 });
        });
    });
};